//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil
//     Les modifications apportées à ce fichier seront perdues si le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------
namespace packTrolls
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using System.Text;

	public class G_Armes
	{
        public static List<Arme> ListeArmes = new List<Arme>(); // Liste contenant toutes les armes créées dans le jeu
        
        /// <summary>
        /// Crée une arme et l'ajoute à ListeArmes
        /// </summary>
        /// <param name="id">ID de l'arme</param>
        /// <param name="nom">Nom de l'arme</param>
        /// <param name="puissance">Puissance de l'arme</param>
        /// <returns></returns>
		public static Arme CreerUneArme(int id, string nom, int puissance)
		{
            foreach (Arme a in ListeArmes)
            {
                if (a.GetId() == id)
                {
                    throw new ArgumentOutOfRangeException("ERREUR: Impossible de créer deux armes avec le même id!");
                }
                if (a.GetNom() == nom)
                {
                    throw new ArgumentOutOfRangeException("ERREUR: Impossible de créer deux armes avec le même nom!");
                }
            }
            Arme nouvelleArme = new Arme(id, nom, puissance);
            G_Armes.ListeArmes.Add(nouvelleArme);
            return nouvelleArme;
		}

        /// <summary>
        /// Cherche une arme dans ListArmes et la renvoie
        /// </summary>
        /// <param name="id">ID arme</param>
        /// <returns></returns>
        public static Arme GetArme(int id)
        {
            foreach (Arme a in ListeArmes)
            {
                if (a.GetId() == id)
                {
                    return a;
                }
            }
            throw new IndexOutOfRangeException("L'arme n'existe pas!");
        }

		public static IEnumerable<Arme> ListerTtesArmes()
		{
            return ListeArmes;
		}

        /// <summary>
        /// Fonction executée pour réinitialiser G_Armes
        /// </summary>
        public static void Reset()
        {
            ListeArmes.Clear();
        }

	}
}

